<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cu.dao.ProblemDao">
    <resultMap id="Problem" type="com.cu.model.Problem">
        <result column="problem_id" property="problem_id"/>
        <result column="problem" property="problem"/>
        <collection property="contentKeyList" ofType="com.cu.model.ContentKey">
            <result column="content_key_id" property="content_key_id"/>
            <result column="content_key" property="content_key"/>
            <result column="content_priority" property="content_priority"/>
            <result column="problem_id" property="problem_id"/>
            <collection property="processKeyList" ofType="com.cu.model.ProcessKey">
                <result column="process_key_id" property="process_key_id"/>
                <result column="process_key" property="process_key"/>
                <result column="reason" property="reason"/>
                <result column="process_priority" property="process_priority"/>
                <result column="content_key_id" property="content_key_id"/>
            </collection>
        </collection>
    </resultMap>

    <select id="queryAll" resultMap="Problem">
        SELECT * FROM problem ORDER BY problem_id
    </select>

    <select id="countAll" resultType="integer">
        SELECT count(*) FROM problem
    </select>

    <select id="queryByIdList" resultMap="Problem">
        SELECT * FROM problem
        WHERE problem.problem_id IN
        <foreach collection="pids" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryById" resultMap="Problem">
        SELECT * FROM problem
        WHERE  problem_id = #{problem_id}
    </select>

    <select id="queryByProblem" resultMap="Problem">
        SELECT * FROM problem
        WHERE problem = #{problem}
    </select>

    <select id="queryLike" resultMap="Problem">
        SELECT * FROM  problem AS p
        WHERE p.problem LIKE  '%${problem}%'
    </select>

    <select id="queryByIdAndProblem" resultMap="Problem">
        SELECT * FROM problem AS p
        WHERE p.problem_id=#{problem_id}
        AND p.problem LIKE '%${problem}%'
    </select>

    <select id="queryContentKey" resultMap="Problem">
       SELECT ifnull(p.problem_id,"0") AS problem_id , ifnull(p.problem,"暂无") AS problem,
       c.content_key_id AS content_key_id, c.content_key AS content_key, c.content_priority AS content_priority
       FROM content_key AS c
       LEFT OUTER JOIN problem AS p
       ON p.problem_id=c.problem_id
       ORDER BY c.content_priority
    </select>

    <select id="queryLikeProblemAndContentKey" resultMap="Problem">
        SELECT ifnull(p.problem_id,"0") AS problem_id , ifnull(p.problem,"暂无") AS problem,
       c.content_key_id AS content_key_id, c.content_key AS content_key, c.content_priority AS content_priority
       FROM content_key AS c
       LEFT OUTER JOIN problem AS p
       ON p.problem_id=c.problem_id
       WHERE p.problem LIKE '%${problem}%'
       AND c.content_key LIKE '%${content_key}%'
       ORDER BY c.content_priority
    </select>

    <select id="queryLikeContentKey" resultMap="Problem">
         SELECT ifnull(p.problem_id,"0") AS problem_id , ifnull(p.problem,"暂无") AS problem,
       c.content_key_id AS content_key_id, c.content_key AS content_key, c.content_priority AS content_priority
       FROM content_key AS c
       LEFT OUTER JOIN problem AS p
       ON p.problem_id=c.problem_id
       WHERE c.content_key LIKE '%${content_key}%'
       ORDER BY c.content_priority
    </select>

    <select id="queryLikeProblem" resultMap="Problem">
        SELECT ifnull(p.problem_id,"0") AS problem_id , ifnull(p.problem,"暂无") AS problem,
       c.content_key_id AS content_key_id, c.content_key AS content_key, c.content_priority AS content_priority
       FROM content_key AS c
       LEFT OUTER JOIN problem AS p
       ON p.problem_id=c.problem_id
       WHERE p.problem LIKE '%${problem}%'
       ORDER BY c.content_priority
    </select>

    <insert id="insertProblem">
        INSERT INTO problem(problem) VALUES (#{problem})
    </insert>

</mapper>